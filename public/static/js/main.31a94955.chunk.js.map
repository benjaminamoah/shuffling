{"version":3,"sources":["contextclass.js","components/templates/headerright.js","components/templates/headermiddle.js","components/templates/header.js","components/templates/footer.js","components/auth/signup.js","components/auth/login.js","components/propping/comment.js","components/propping/chat.js","components/propping/play.js","components/propping/staging.js","components/terms/terms.js","App.js","serviceWorker.js","index.js"],"names":["Context","createContext","Provider","props","data","id","name","localStorage","getItem","authenticated","api_url","window","location","origin","value","auth","children","HeaderRight","authenticate","context","athenticated","setState","state","document","console","log","signout","setItem","removeItem","activateForceUpdate","routes_preurl","this","className","style","display","onClick","src","alt","to","Component","contextType","HeaderMiddle","higheststats","Header","Footer","data-href","data-layout","data-size","target","href","data-show-count","Signup","signup","event","preventDefault","fetch","method","body","JSON","stringify","email","password","firstname","lastname","displayedname","dateofbirth","gender","headers","then","res","json","response_msg","movingToAd","catch","error","handleChange","bind","backgroundImage","backgroundRepeat","backgroundSize","onSubmit","type","placeholder","onChange","required","autoFocus","defaultValue","Login","token","isauthenticated","redirect","pathname","Comment","setMessage","e","message","getElementById","propping_id","onKeyPress","Chat","timeout_id1","timeout_id2","fectchPlayers","players","fectchMessages","messages","runFetchMessages","setInterval","runFetchPlayers","fectchplayers","runfetchmessages","clearInterval","map","item","index","key","Play","addplayer","checkPropping","isProppingReady","numberofplayers","setTimeout","fetchplayers","_id","leaveConversation","playerids","time","creditearned","winner","prize","prize_w_currency","new_prize","credit_now_available","Staging","click","Terms","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.31a94955.chunk.js","sourcesContent":["import React, { createContext } from 'react';\r\n\r\nexport const Context = createContext();\r\n\r\nexport const Provider = props => {\r\n    let auth= \"Sign Up\";\r\n    \r\n    const data = {\r\n        id: \"init id\",\r\n        name: localStorage.getItem(\"name\"),\r\n        authenticated: localStorage.getItem(\"authenticated\")\r\n    };\r\n\r\n    let players = [];\r\n\r\n    let fetchplayers = false;\r\n\r\n    let propping_id = \"\";\r\n\r\n    const api_url = window.location.origin;\r\n    //const api_url = \"http://dabbscreen.com/\";\r\n    //const api_url = \"https://shuffling2.appdeployments.now.sh\";\r\n    //const api_url = \"https://guarded-caverns-33102.herokuapp.com\";\r\n\r\n        return (\r\n            <Context.Provider value={[data, (id, auth) => {data.id = id; data.authenticated = auth;}, players, fetchplayers, propping_id, auth, (name) => {data.name = name;}, api_url]} >\r\n                {props.children}\r\n            </Context.Provider>\r\n        );\r\n\r\n}","import React, { Component } from 'react';\r\nimport './templates.css';\r\nimport {Link} from 'react-router-dom';\r\nimport {Context} from '../../contextclass';\r\n\r\nclass HeaderRight extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            routes_preurl: \"\",\r\n            auth: \"\",\r\n            name: \"\"\r\n        }\r\n    }\r\n    \r\n    static contextType = Context;\r\n\r\n    authenticate = () => {\r\n        let name = localStorage.getItem(\"name\");\r\n        if( this.context[0].athenticated === true || this.context[0].athenticated === \"true\" ){\r\n            this.setState({ auth: true }, () => {\r\n                if( this.state.auth === true || this.state.auth === \"true\" ){\r\n                    document.location = \"/play\";\r\n                    console.log(\"headerright's balling!\"+this.state.auth);\r\n                }\r\n            });\r\n        }else if( this.context[0].athenticated === false || this.context[0].athenticated === \"false\" ){\r\n        this.setState({ auth: false }, () => {\r\n            if( this.state.auth === false || this.state.auth === \"false\" ){\r\n                document.location = \"/\";\r\n                console.log(\"headerright's!\"+this.state.auth);\r\n            }\r\n        });\r\n        }\r\n\r\n        this.setState({ \"name\": name });\r\n    }\r\n\r\n    signout = () => {\r\n        localStorage.setItem(\"authenticated\", false);\r\n        localStorage.removeItem(\"id\");\r\n        localStorage.removeItem(\"name\");\r\n        localStorage.removeItem(\"token\");\r\n        this.setState({ auth: localStorage.getItem(\"authenticated\") }, () => {\r\n            this.context[1](\"\", false);\r\n            if( this.state.auth === \"false\" || this.state.auth === false ){\r\n                document.location = \"/\";\r\n            }\r\n        });\r\n        \r\n        console.log(\"auth is now: \"+this.state.auth);\r\n    }\r\n\r\n    activateForceUpdate = () => {\r\n        this.setState( { auth: true } );\r\n        this.setState( { name: localStorage.getItem(\"name\") } );\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState( { auth: this.context[0].authenticated } );\r\n    }\r\n\r\n    render(){\r\n        if( this.state.auth === \"true\" || this.state.auth === true ){\r\n            console.log(\"THIS IS WHAT AUTH HAS BECOME: \"+this.state.auth);\r\n            return ( \r\n                <div className=\"header-right\">\r\n                    <div style={ { display: \"none\" } }>\r\n                        <button id=\"updateHeaderRight\" onClick={ this.activateForceUpdate }></button>\r\n                    </div>\r\n                    <div className=\"displayed_name\"><img src={ process.env.PUBLIC_URL+\"/uploads/profileimages/default.png\" } alt=\"profile pic\" />{ localStorage.getItem(\"name\") }</div>\r\n                    <div className=\"sign-out\" onClick={ this.signout }>Sign Out</div>\r\n                </div>\r\n            )\r\n        }else{\r\n            return (\r\n            <div className=\"header-right\">\r\n                <div style={ { display: \"none\" } }>\r\n                    <button id=\"updateHeaderRight\" onClick={ this.activateForceUpdate }></button>\r\n                </div>\r\n                <div className=\"sign-up\"><Link to={ this.state.routes_preurl+\"/signup\" }>Sign Up</Link></div>\r\n                <div className=\"sign-in\"><Link to={ this.state.routes_preurl+\"/\" }>Sign In</Link></div>\r\n            </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default HeaderRight;","import React, { Component } from 'react';\r\nimport './templates.css';\r\n\r\nclass HeaderMiddle extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            higheststats: []\r\n        }\r\n    }\r\n    \r\n    render(){\r\n     return (\r\n        <div className=\"header-middle\">\r\n            \r\n        </div>\r\n     );\r\n    }\r\n}\r\n\r\nexport default HeaderMiddle;","import React from 'react';\r\nimport './templates.css';\r\nimport { Link } from 'react-router-dom';\r\nimport HeaderRight from './headerright';\r\nimport HeaderMiddle from './headermiddle';\r\n\r\n\r\nconst Header = () => (\r\n    <div className=\"header\">\r\n        <div className=\"logo\">\r\n        <Link  to={ \"/\" }>\r\n            DabbStream\r\n        </Link>\r\n        </div>\r\n        <HeaderMiddle />\r\n        <HeaderRight />\r\n    </div>\r\n);\r\n\r\nexport default Header;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './templates.css'\r\n\r\nconst Footer = () => (\r\n    <div className=\"footer\">\r\n        <footer className=\"footer text-center\">\r\n            Invite your people from Facebook and Twitter to join DabbStream.<br />\r\n                <div className=\"fb-share-button\" data-href=\"http://dabbstream.com\" data-layout=\"button_count\" data-size=\"small\"><Link target=\"_blank\" href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fdevelopers.facebook.com%2Fdocs%2Fplugins%2F&amp;src=sdkpreparse\" className=\"fb-xfbml-parse-ignore\">Share</Link></div>\r\n                <div>\r\n                { \"   \" }<Link href=\"https://twitter.com/share?ref_src=twsrc%5Etfw\" className=\"twitter-share-button\" data-show-count=\"false\">Tweet</Link><br />\r\n                </div>\r\n                    \r\n            DabbStream @2019 <Link to=\"/terms\">DabbStream's Terms of Use and Privacy Policy</Link>\r\n        </footer>\r\n    </div>\r\n);\r\n\r\nexport default Footer;","import React, { Component, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {Context} from '../../contextclass';\r\n\r\nclass Signup extends Component{\r\n\r\n  constructor(props){\r\n      super(props);\r\n\r\n      this.state = {\r\n        routes_preurl: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        displayedname: \"\",\r\n        gender: \"\",\r\n        dateofbirth: \"\",\r\n        error: \"\"\r\n      };\r\n\r\n      this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  static contextType = Context;\r\n\r\n  handleChange(event){\r\n    let id = event.target.id;\r\n    let value = event.target.value;\r\n    this.setState({[id]: value});\r\n  }\r\n\r\n  signup = (event) => {\r\n      event.preventDefault();\r\n      \r\n      fetch(this.context[7]+'/signup', {\r\n          method: 'POST',\r\n          body: JSON.stringify({ \r\n            email: this.state.email, \r\n            password: this.state.password,\r\n            firstname: this.state.firstname, \r\n            lastname: this.state.lastname,\r\n            displayedname: this.state.displayedname, \r\n            dateofbirth: this.state.dateofbirth,\r\n            gender: this.state.gender \r\n          }),\r\n          headers: { 'Content-Type': 'application/json' }\r\n      })\r\n      .then(res => res.json())\r\n      .then((body) => (body.response_msg === \"You were just signed up!\" ? this.movingToAd(body.id) : this.setState({ \"error\": body.response_msg })))\r\n      .catch((error) => {\r\n        console.log(\"Error message: \"+error);\r\n      });\r\n  }\r\n\r\n  movingToAd = (id) => {\r\n    localStorage.setItem(\"authenticated\", true);\r\n    localStorage.setItem(\"token\", 1);\r\n    localStorage.setItem(\"id\", id );\r\n    window.location = this.state.routes_preurl+\"/staging\";\r\n  }\r\n\r\n    render() {\r\n      return (\r\n        <Fragment>\r\n        <div className=\"auth-scontainer\" style={{backgroundImage: \"url(\"+process.env.PUBLIC_URL+\"/background.jpg)\", backgroundRepeat: \"no-repeat\", backgroundSize: \"cover\"}}>\r\n            <div className=\"auth\">\r\n                <div className=\"error_msg\">{ this.state.error }</div>\r\n                <form onSubmit={ this.signup } className=\"form-signup\">\r\n                <h5 className=\"h4 mb-3 font-weight-normal\">Sign up</h5>\r\n                <label className=\"sr-only\">Email address</label>\r\n                <input type=\"email\" id=\"email\" className=\"form-control\" placeholder=\"Email address\" onChange={ this.handleChange } required autoFocus />\r\n                <label className=\"sr-only\">Password</label>\r\n                <input type=\"password\" id=\"password\" className=\"form-control\" placeholder=\"Password\" onChange={ this.handleChange } required />\r\n                <label className=\"sr-only\">First Name</label>\r\n                <input type=\"text\" id=\"firstname\" className=\"form-control\" placeholder=\"First Name\" onChange={ this.handleChange } required />\r\n                <label className=\"sr-only\">Last Name</label>\r\n                <input type=\"text\" id=\"lastname\" className=\"form-control\" placeholder=\"Last Name\" onChange={ this.handleChange } required />\r\n                <label className=\"sr-only\">Displayed Name</label>\r\n                <input type=\"text\" id=\"displayedname\" className=\"form-control\" placeholder=\"Displayed Name (What others will see)\" onChange={ this.handleChange } required />\r\n                <select id=\"gender\" className=\"custom-select\" onChange={ this.handleChange } required>\r\n                  <option defaultValue>Gender</option>\r\n                  <option></option>\r\n                  <option>Female</option>\r\n                  <option>Male</option>\r\n                </select>\r\n                <label className=\"sr-only\">Date of Birth</label>\r\n                <input type=\"date\" id=\"dateofbirth\" className=\"form-control\" placeholder=\"MM/DD/YYYY\" onChange={ this.handleChange } required />\r\n                <div className=\"checkbox mb-3\">\r\n                    <label>\r\n                    By signing up you agree to the <Link to=\"/terms\" target=\"_blank\">Terms of Use and Privacy Policies of DabbStream</Link>.\r\n                    </label>\r\n                </div>\r\n\r\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Sign Up\" />\r\n                </form>\r\n                <br />\r\n                <br />\r\n                \r\n                <Link to={ this.state.routes_preurl+\"/\" }>Back Sign In</Link>\r\n            </div>\r\n          </div>\r\n      </Fragment>);\r\n    }\r\n    \r\n  }\r\n\r\n  export default Signup;","import React, { Component, Fragment } from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport {Context} from '../../contextclass';\r\nimport './user-auth.css';\r\n\r\nclass Login extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            routes_preurl: \"\",\r\n            id: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            name: \"\",\r\n            token: \"\",\r\n            error: \"\",\r\n            isauthenticated: false,\r\n            redirect: false\r\n        };\r\n\r\n       this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    static contextType = Context;\r\n\r\n    handleChange(event){\r\n        let id = event.target.id;\r\n        let value = event.target.value;\r\n        this.setState({[id]: value});     \r\n    }\r\n\r\n    authenticate = event => {\r\n        event.preventDefault();\r\n\r\n        fetch(this.context[7]+'/auth', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ email: this.state.email, password: this.state.password }),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        })\r\n        .then(res => res.json())\r\n        .then((body) => (body.response_msg === \"You are authorized to proceed!\" ? this.setState({id: body.id, name: body.name, token: body.token, isauthenticated: true}) : this.setState({error: \"The email or password is incorrect.\"})));\r\n    }\r\n    \r\n    componentDidMount(){\r\n        if( this.context[0].authenticated === true || this.context[0].authenticated === \"true\" ){\r\n            this.setState( { redirect: true } );\r\n        }\r\n        console.log(\"login: \"+this.context[0].authenticated)\r\n    }\r\n\r\n    render() {  \r\n        if( this.state.redirect === true ){\r\n            return (<div>\r\n                <Redirect to={{\r\n                    pathname: this.state.routes_preurl+'/staging',\r\n                    state: \"\"\r\n                }} />\r\n                </div>);\r\n        }else{              \r\n        if(this.state.isauthenticated === true){\r\n            localStorage.setItem(\"id\", this.state.id);\r\n            localStorage.setItem(\"name\", this.state.name);\r\n            localStorage.setItem(\"authenticated\", \"true\");\r\n            localStorage.setItem(\"token\", this.state.token);\r\n            this.context[1](this.state.id, true);\r\n            this.context[6](this.state.name);\r\n            return (<div>\r\n                <Redirect to={{\r\n                    pathname: this.state.routes_preurl+'/staging',\r\n                    state: \"\"\r\n                }} />\r\n            </div>);\r\n        }else{\r\n            return (\r\n                <Fragment>\r\n                    <div className=\"auth-scontainer\" style={{backgroundImage: \"url(\"+process.env.PUBLIC_URL+\"/background.jpg)\", backgroundRepeat: \"no-repeat\", backgroundSize: \"cover\"}}>\r\n                    <div className=\"succint-hiw\">\r\n                        Watch an ad for the chance to win some money for yourself and a charity.\r\n                    </div>\r\n                    <div className=\"auth\">\r\n                        <div className=\"error_msg\">{ this.state.error }</div>\r\n                        <form onSubmit={ this.authenticate } className=\"form-signin\">\r\n                        <h6 className=\"h4 mb-3 font-weight-normal\">Please sign in</h6>\r\n                        <label className=\"sr-only\">Email address</label>\r\n                        <input type=\"email\" id=\"email\" className=\"form-control\" placeholder=\"Email address\" onChange={ this.handleChange } required autoFocus />\r\n                        <label className=\"sr-only\">Password</label>\r\n                        <input type=\"password\" id=\"password\" className=\"form-control\" placeholder=\"Password\" onChange={ this.handleChange } required />\r\n                        <div className=\"checkbox mb-3\">\r\n                            <label>\r\n                            <input type=\"checkbox\" value=\"remember-me\" /> Remember me\r\n                            </label>\r\n                        </div>\r\n\r\n                        <input type=\"submit\" className=\"btn btn-primary\" value=\"Sign In\" />\r\n                        </form>\r\n\r\n                        <Link to={ this.state.routes_preurl+\"/signup\" }>Create an account!</Link>\r\n                        \r\n                    </div>\r\n\r\n                    <div className=\"hiw\">\r\n                        <h4>How it works!</h4>\r\n                        <p>Log in and talk to up to 10 random people. You can leave or join a new conversation at any time.</p>\r\n                    </div>\r\n                    </div>\r\n                </Fragment>\r\n            );\r\n        }\r\n        }\r\n    }\r\n    \r\n  }\r\n  \r\nexport default Login;","import React, { Component, Fragment } from 'react';\r\nimport {Context} from '../../contextclass';\r\nimport './propping.css';\r\n\r\nclass Comment extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            message: \"\"\r\n        }\r\n    }\r\n\r\n    static contextType = Context;\r\n\r\n    setMessage = (e) => {\r\n        const message = e.target.value;\r\n        this.setState( { message: message } )\r\n    }\r\n\r\n    message = () => {\r\n        const id = localStorage.getItem(\"id\");\r\n        const name = localStorage.getItem(\"name\");\r\n        const message = document.getElementById('message').value;\r\n        const propping_id = this.props.name;\r\n        \r\n        document.getElementById('message').value = \"\";\r\n        \r\n        fetch(this.context[7]+'/message', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ id: id, name: name, message: message, propping_id: propping_id }),\r\n            headers: { \r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json' \r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then((body) => (body.response_msg === \"Message was successfully inserted!\" ? console.log(\"Message sent!\") : console.log(\"could not retrieve players\")));\r\n    }\r\n\r\n    render(){ \r\n        return (\r\n            <Fragment>\r\n                <input type=\"text\" onKeyPress={ this.setMessage } id=\"message\" className=\"comment_input\" placeholder=\"Say something!\" />\r\n                <input type=\"button\" onClick={ this.message }  className=\"btn btn-primary\" value=\">>\" />                        \r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Comment;","import React, { Component, Fragment } from 'react';\r\nimport {Context} from '../../contextclass';\r\nimport './propping.css'\r\n\r\nclass Chat extends Component {  \r\n    timeout_id1 = 0;  \r\n    timeout_id2 = 0;  \r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: localStorage.getItem(\"id\"),\r\n            players: [],\r\n            messages: [],\r\n            fectchplayers: false,\r\n            runfetchmessages: true\r\n        }\r\n     \r\n    }\r\n\r\n    static contextType = Context;\r\n\r\n    componentDidMount(){\r\n        const propping_id = this.props.name;\r\n        this.setState({ propping_id: propping_id });\r\n        this.runFetchPlayers();\r\n        this.runFetchMessages();\r\n    }\r\n\r\n    fectchPlayers = ( propping_id ) =>{\r\n        //do settimeout to check periodically\r\n        this.setState({ propping_id: propping_id });\r\n        fetch(this.context[7]+'/players', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ propping_id: propping_id }),\r\n            headers: { \r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json' \r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then((body) => (body.response_msg === \"Here are the players!\" ? this.setState({ players: body.players }) : console.log(\"could not retrieve players\")));\r\n    }\r\n\r\n    fectchMessages = ( propping_id ) =>{\r\n        //do settimeout to check periodically\r\n        fetch(this.context[7]+'/fetchmessages', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ propping_id: propping_id }),\r\n            headers: { \r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json' \r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then((body) => (body.response_msg === \"Here are the messages!\" ? this.setState( { messages: body.messages } ) /*this.setState({ messages: body.messages })*/ : console.log(\"could not retrieve messages\")));\r\n    }\r\n\r\n    runFetchMessages = () => {\r\n        console.log(\"We're in messages:\");\r\n        this.timeout_id1 = setInterval(() => {\r\n            this.fectchMessages(this.props.name);\r\n        }, 2000);\r\n    }\r\n\r\n    runFetchPlayers = () => {\r\n        console.log(\"We're in players:\");\r\n        this.timeout_id2 = setInterval(() => {\r\n            this.fectchPlayers(this.props.name);\r\n        }, 2000);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval( this.timeout_id1 );\r\n        clearInterval( this.timeout_id2 );\r\n    }\r\n\r\n    render(){ \r\n        return (\r\n            <Fragment>\r\n                <div className=\"messages\">\r\n                    { this.state.messages.map((item, index) =>\r\n                        <div key={ index } className=\"message\">\r\n                            { item.name+' | ' }{ item.message }\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className=\"players\">\r\n                    { this.state.players.map((item, index) =>\r\n                    <div key={ index } className=\"player\">\r\n                        <div className=\"name\">\r\n                            <img src={ process.env.PUBLIC_URL+\"/uploads/profileimages/default.png\" } alt=\"profile\" />\r\n                            { item.displayedname }\r\n                        </div>\r\n                        <div className=\"vote\">\r\n                        </div>\r\n                    </div>\r\n                    )}\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Chat;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Comment from './comment'\r\nimport Chat from './chat';\r\nimport {Context} from '../../contextclass';\r\nimport './propping.css'\r\n\r\nclass Play extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            routes_preurl: \"\",\r\n            id: 1,\r\n            email: \"email1\",\r\n            numberofplayers: 0,\r\n            playerids: [],\r\n            players: [],\r\n            time: 60,\r\n            propping_id: 0,\r\n            fetchplayers: false,\r\n            creditearned: 0,\r\n            winner: { name:\"\" },\r\n            prize: 0,\r\n            prize_w_currency: \"\",\r\n            new_prize: 0,\r\n            credit_now_available: 0\r\n        }\r\n\r\n    }\r\n\r\n    static contextType = Context;\r\n\r\n    componentDidMount(){\r\n        this.addplayer();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.leaveConversation( this.state.propping_id );\r\n    }\r\n\r\n    addplayer = () => {\r\n        const id = localStorage.getItem(\"id\");\r\n        const name = localStorage.getItem(\"name\");\r\n        fetch(this.context[7]+'/addplayer', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ id: id, name: name }),\r\n            headers: { \r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json' \r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then((body) => (body.response_msg === \"Player Added\" ? this.checkPropping( body.propping_id ) : console.log(\"could not add player!\")));\r\n    }\r\n\r\n    isProppingReady = ( propping_id, numberofplayers ) => {\r\n        if(numberofplayers < 1){ \r\n            this.setState({ numberofplayers: numberofplayers })\r\n            setTimeout( this.checkPropping( propping_id ), 2000 );\r\n        }else{\r\n            this.context[3] = true;\r\n            this.context[4] = propping_id;\r\n            this.setState({ propping_id: propping_id });\r\n            this.setState({ fetchplayers: true });\r\n        }\r\n    }\r\n\r\n    checkPropping = ( propping_id ) => {\r\n        fetch(this.context[7]+'/playersfrompropping', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ propping_id: propping_id }),\r\n            headers: { \r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json' \r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then((body) => (body.response_msg === \"Here are the players!\" ? this.isProppingReady( body.players[0]._id, body.players[0].numberofplayers ) : console.log(\"could not retrieve players\")));\r\n    }  \r\n    \r\n    leaveConversation = ( propping_id ) => {\r\n        const id = localStorage.getItem(\"id\");\r\n        fetch(this.context[7]+'/leaveconversation', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ propping_id: propping_id, id: id }),\r\n            headers: { \r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json' \r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then((body) => (body.response_msg === \"Left conversation!\" ? console.log(\"Left conversation successfully!\") : console.log(\"could not leave conversation\")));\r\n    }\r\n\r\n    render(){ \r\n            if( this.state.fetchplayers === true ){\r\n                return ( \r\n                    <section>\r\n                    <div className=\"play-container\">  \r\n                        <div className=\"play-instructions\">\r\n                            <Link to={ this.state.routes_preurl+\"/staging\" }>\r\n                                <button className=\"btn btn-outline-primary\">\r\n                                    Leave Conversation\r\n                                </button>\r\n                            </Link>\r\n                            <br /><br />\r\n                        </div>\r\n                        <div className=\"play-instructions\">\r\n                        <h6>We're set baby... Say hi!</h6>\r\n                        </div>\r\n                        <div className=\"play-comment\">\r\n                            <Comment name={ this.state.propping_id } />\r\n                        </div>\r\n                        <div className=\"play-chat\">\r\n                            <Chat name={ this.state.propping_id } />\r\n                        </div>\r\n                    </div>\r\n                    <br /><br /><br /><br />\r\n                    </section>\r\n                );\r\n            }else{\r\n            return (\r\n                <section>\r\n                <div className=\"play-container\">  \r\n                    <div className=\"play-instructions\">\r\n                        <h6>Waiting for { 2-this.state.numberofplayers } other { (2-this.state.numberofplayers) === 1 ? \"person\" : \"people\" } to join...</h6>\r\n                            <br /><br />\r\n                            <h6>If it's taking too long, invite your people from Facebook and Twitter to Shuffling.</h6>\r\n                            {/* Leave game */}\r\n                            {/* Facebook and Twitter share buttons */}\r\n                    </div>\r\n                </div>\r\n                </section>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Play;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './propping.css'\r\n\r\nclass Staging extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            routes_preurl: \"\",\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        document.getElementById(\"updateHeaderRight\").click();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <section>\r\n            <div className=\"play-container\">  \r\n                <div className=\"play-instructions\">\r\n                    <h6>Join a conversation of up to 10 people. Are you set?!</h6>\r\n                    <Link to={ this.state.routes_preurl+\"/play\" }>\r\n                    <button className=\"btn btn-primary\">\r\n                        Enter a New Conversation\r\n                    </button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            </section>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Staging;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './terms.css';\r\n\r\nconst Terms = () => (\r\n    <div className=\"terms-container\">\r\n        <div className=\"terms\">\r\n            <h4>Terms of Use and Privacy Policy</h4>\r\n            <p>Please don't sue me.\r\n            </p>\r\n            <Link to=\"/staging\">{ \"<< Return\" }</Link>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Terms;","import React from 'react';\nimport Header from './components/templates/header';\nimport Footer from './components/templates/footer';\nimport Signup from './components/auth/signup';\nimport Login from './components/auth/login';\nimport Play from './components/propping/play';\nimport Staging from './components/propping/staging';\nimport Terms from './components/terms/terms';\nimport { Context } from './contextclass';\nimport {Provider} from './contextclass';\nimport { Route } from 'react-router-dom';\nimport './App.css';\n\nfunction App() {\n  const routes_preurl = \"\";\n  \n  return (\n    <Provider>\n    <div className=\"app\">\n      <Header />\n\n      <Route exact path={ routes_preurl+\"/\" } component={Login} />\n      <Route path={ routes_preurl+\"/signup\" } component={Signup} />\n      <Route path={ routes_preurl+\"/play\" } component={Play} />\n      <Route path={ routes_preurl+\"/staging\" } component={Staging} />\n      <Route path={ routes_preurl+\"/terms\" } component={Terms} /> \n\n      <Footer />\n    </div>\n    </Provider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}